#Angular pipeline
parameters:
  - name: ENVVG
    displayName: select Environment To Deploy
    type: string
    default: UAT
    values:
        - UAT
        #- PROD

trigger:
- main

#DEFINE VARIABLES
variables:
- name: build_agent_pool
  value: windows-latest

- name: build_content_path
  value: "$(Pipeline.Workspace)"

- name: env
  ${{ if eq(parameters.ENVVG, 'UAT') }}:
    value: uat
  ${{ if eq(parameters.ENVVG, 'PROD') }}:
    value: prod


- name: BACKEND_URL
  value: $(${{ parameters.ENVVG }}_BACKEND_URL)



- group: election_commission_survey_group


stages:
  - stage: BUILD
    displayName: 'Build ${{ parameters.ENVVG }}'
    pool:
      vmImage: $(build_agent_pool)
    jobs:
      - job: Build
        displayName: "Build UI"
        workspace:
          clean: all
        steps:
          - checkout: self
          - task: replacetokens@5
            inputs:
              rootDirectory: '$(Build.SourcesDirectory)/src/environments/'
              targetFiles: 'environment.prod.ts, environment.ts'
              encoding: 'auto'
              tokenPattern: 'default'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              actionOnNoFiles: 'continue'
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true
          - task: NodeTool@0
            inputs:
              versionSource: 'spec'
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - task: Npm@1
            inputs:
              command: 'custom'
              customCommand: 'install -g @angular/cli@14.2.0'
            displayName: 'Install Node.js'
          - task: Npm@1
            inputs:
              command: 'install'
            displayName: 'Npm install'

          - task: Npm@1
            inputs:
              command: 'custom'
              customCommand: 'run ng build'
            displayName: 'dist'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Pipeline.Workspace)"
              artifactName: build_ui_$(env)
            displayName: "Publish pipeline artifact"
          # - task: CopyFiles@2
          #   inputs:
          #     SourceFolder: 'dist'
          #     Contents: '**'
          #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          #     ArtifactName: build_ui_$(env)
          #     publishLocation: 'Azure Pipelines'